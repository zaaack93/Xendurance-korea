<style id="_acct_">
  #smartrr_account ~ * {
    display: none;
  }
  #smartrr_account {
    min-height: 100vh;
    position: relative;
  }

  html, body {
    min-width: 320px;
    cursor: default;
  }

  #MainContent {
    padding-top: 0 !important;
  }
</style>
{% render 'smartrr-account-theme' %}
<script src="//app.smartrr.com/js/smartrr-account.js"></script>
<div id="smartrr_account"></div>

{% assign smartrr_myshopifydomain = shop.permanent_domain | url_encode %}
{% assign smartrr_duration = 1000 | times: 60 | times: 60 | times: 24 | times: 10 %}
{% assign smartrr_exp = "now" | date: "%s" | times: 1000 | plus: smartrr_duration %}
{% capture smartrr_token %}{% render 'smartrr_customer_portal_token' %}{% endcapture %}
{% assign smartrr_sig = customer.id | append: smartrr_myshopifydomain | append: smartrr_exp | hmac_sha256: smartrr_token %}

<script>
function initializeSmartrr() {
  if (window.smartrr && window.smartrr.account) {
    window.smartrr.account.initialize({
      validation: {
        {% if customer and customer.id and smartrr_sig and smartrr_exp %}
          myShopifyDomain: {{ smartrr_myshopifydomain | json }} || null,
          hasSignature: true,
          shopifyId: {{ customer.id | json }},
          signature: {{ smartrr_sig | json }},
          exp: Number("{{ smartrr_exp | json }}"),
        {% else %}
          hasSignature: false
        {% endif %}
      },
      liquidCustomer: {
        shopifyId: "{{ customer.id }}",
        {% if customer.email %}
          email: "{{ customer.email }}",
        {% endif %}
        {% if customer.phone %}
          phone: "{{ customer.phone }}",
        {% endif %}
        {% if customer.first_name %}
          firstName: {{ customer.first_name | json }},
        {% endif %}
        {% if customer.last_name %}
          lastName: {{ customer.last_name | json }},
        {% endif %}
        trackShipmentText:  "{{ 'customer.order.track_shipment' | t }}",
        {% if customer.default_address %}
          defaultAddressId: {{ customer.default_address.id | json }},
        {% endif %}
        {% if customer.default_address %}
          defaultAddress: {{ customer.default_address | json }},
        {% endif %}
        {% if customer.state %}
          state: {{ customer.state | json }},
        {% endif %}
        customerCurrency: {{ cart.currency.iso_code | json }},
        orderCount: {{ customer.orders_count | number }} || 0,
        totalSpent: {{ customer.total_spent | json }} || 0,
        addresses: {{ customer.addresses | json }}
      },
      liquidOrders: [
  {% if customer.orders.size >= 1 %}
        {
          id: {{ customer.orders[0].id | json }},
          name: {{ customer.orders[0].name | json }},
          created_at: {{ customer.orders[0].created_at | json }},
          presentment_currency: {{ customer.orders[0].total_price | money_with_currency | slice: -3, 3 | json }} || "USD",
          cancelled: {{ customer.orders[0].cancelled | json }},
          cancel_reason: {{ customer.orders[0].cancel_reason | json }},
          customer: {{ customer.orders[0].customer | json }},
          customer_url: {{ customer.orders[0].customer_url | json }},
          email: {{ customer.orders[0].email | json }},
          phone: {{ customer.orders[0].phone | json }},
          financial_status: {{ customer.orders[0].financial_status | json }},
          fulfillment_status: {{ customer.orders[0].fulfillment_status | json }},
          tags: {{ customer.orders[0].tags | json }},
          tax_lines: [
            {% for tax_line in customer.orders[0].tax_lines %}
            { price: {{ tax_line.price | json }},
              rate: {{ tax_line.rate | json }},
              title: {{ tax_line.title | json }} },
            {% endfor %}
          ],
          line_items: {{ customer.orders[0].line_items | json }},
          discount_applications: {{ customer.orders[0].discount_applications | json }},
          shipping_address: {{ customer.orders[0].shipping_address | json }},
          tax_price: Number({{ customer.orders[0].tax_price }}),
          shipping_price: Number({{ customer.orders[0].shipping_price }}),
          total_price: {{ customer.orders[0].total_price }},
          total_discounts: {{ customer.orders[0].total_discounts }},
          total_refunded_amount: {{ customer.orders[0].total_refunded_amount }},
          total_net_amount: {{ customer.orders[0].total_net_amount }}
        },
  {% endif %}
  {% if customer.orders.size >= 2 %}
        {
          id: {{ customer.orders[1].id | json }},
          name: {{ customer.orders[1].name | json }},
          created_at: {{ customer.orders[1].created_at | json }},
          presentment_currency: {{ customer.orders[1].total_price | money_with_currency | slice: -3, 3 | json }} || "USD",
          cancelled: {{ customer.orders[1].cancelled | json }},
          cancel_reason: {{ customer.orders[1].cancel_reason | json }},
          customer: {{ customer.orders[1].customer | json }},
          customer_url: {{ customer.orders[1].customer_url | json }},
          email: {{ customer.orders[1].email | json }},
          phone: {{ customer.orders[1].phone | json }},
          financial_status: {{ customer.orders[1].financial_status | json }},
          fulfillment_status: {{ customer.orders[1].fulfillment_status | json }},
          tags: {{ customer.orders[1].tags | json }},
          tax_lines: [
            {% for tax_line in customer.orders[1].tax_lines %}
            { price: {{ tax_line.price | json }},
              rate: {{ tax_line.rate | json }},
              title: {{ tax_line.title | json }} },
            {% endfor %}
          ],
          line_items: {{ customer.orders[1].line_items | json }},
          discount_applications: {{ customer.orders[1].discount_applications | json }},
          shipping_address: {{ customer.orders[1].shipping_address | json }},
          tax_price: Number({{ customer.orders[1].tax_price }}),
          shipping_price: Number({{ customer.orders[1].shipping_price }}),
          total_price: {{ customer.orders[1].total_price }},
          total_discounts: {{ customer.orders[1].total_discounts }},
          total_refunded_amount: {{ customer.orders[1].total_refunded_amount }},
          total_net_amount: {{ customer.orders[1].total_net_amount }}
        },
  {% endif %}
  {% if customer.orders.size >= 3 %}
        {
          id: {{ customer.orders[2].id | json }},
          name: {{ customer.orders[2].name | json }},
          created_at: {{ customer.orders[2].created_at | json }},
          presentment_currency: {{ customer.orders[2].total_price | money_with_currency | slice: -3, 3 | json }} || "USD",
          cancelled: {{ customer.orders[2].cancelled | json }},
          cancel_reason: {{ customer.orders[2].cancel_reason | json }},
          customer: {{ customer.orders[2].customer | json }},
          customer_url: {{ customer.orders[2].customer_url | json }},
          email: {{ customer.orders[2].email | json }},
          phone: {{ customer.orders[2].phone | json }},
          financial_status: {{ customer.orders[2].financial_status | json }},
          fulfillment_status: {{ customer.orders[2].fulfillment_status | json }},
          tags: {{ customer.orders[2].tags | json }},
          tax_lines: [
            {% for tax_line in customer.orders[2].tax_lines %}
            { price: {{ tax_line.price | json }},
              rate: {{ tax_line.rate | json }},
              title: {{ tax_line.title | json }} },
            {% endfor %}
          ],
          line_items: {{ customer.orders[2].line_items | json }},
          discount_applications: {{ customer.orders[2].discount_applications | json }},
          shipping_address: {{ customer.orders[2].shipping_address | json }},
          tax_price: Number({{ customer.orders[2].tax_price }}),
          shipping_price: Number({{ customer.orders[2].shipping_price }}),
          total_price: {{ customer.orders[2].total_price }},
          total_discounts: {{ customer.orders[2].total_discounts }},
          total_refunded_amount: {{ customer.orders[2].total_refunded_amount }},
          total_net_amount: {{ customer.orders[2].total_net_amount }}
        }
  {% endif %}
      ].filter(Boolean),
      sellingPlanGroupsByProductId: {
        {% for product in collections.all.products %}
          {{ product.id }}: {{ product.selling_plan_groups | json }},
        {% endfor %}
      }
    });
  }
}
if (["complete", "loaded"].indexOf(document.readyState) !== -1) {
  window.initializeSmartrr();
} else {
  document.addEventListener("DOMContentLoaded", function () {
    window.initializeSmartrr();
  });
}
</script>